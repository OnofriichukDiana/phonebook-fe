{"version":3,"file":"static/js/857.141ae62b.chunk.js","mappings":"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","sources":["components/Forms/ContactForm.jsx","components/Filter/Filter.jsx","components/Forms/EditForm.jsx","components/ContactList/ContactList.jsx","pages/PhoneBook/PhoneBook.jsx"],"sourcesContent":["import \"./Forms.css\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport {\r\n  useGetContactsQuery,\r\n  useAddContactMutation,\r\n} from \"../../Redux/reducer\";\r\n\r\nconst ContactForm = () => {\r\n  const [addContact, { isLoading }] = useAddContactMutation();\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const form = evt.currentTarget;\r\n    const newName = form.elements.name.value;\r\n    const newNumber = form.elements.number.value;\r\n    const contact = { name: newName, number: newNumber };\r\n\r\n    addContact(contact);\r\n    form.reset();\r\n  };\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n      <input\r\n        placeholder=\"name\"\r\n        className=\"input\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n      />\r\n      <input\r\n        placeholder=\"phone number\"\r\n        className=\"input\"\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n        required\r\n      />\r\n      {isLoading && <Loader></Loader>}\r\n      <button className=\"button\" type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import \"./Filter.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeFilter } from \"../../Redux/actions\";\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (evt) => {\r\n    const value = evt.target.value;\r\n    dispatch(changeFilter(value));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"text\">Find contacts by name</p>\r\n      <input className=\"input\" type=\"text\" onChange={handleChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import \"./Forms.css\";\r\n\r\nconst EditForm = ({ contact, onEdit }) => {\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const form = evt.currentTarget;\r\n    const newName = form.elements.name.value;\r\n    const newNumber = form.elements.number.value;\r\n    const newContact = { id: contact._id, name: newName, number: newNumber };\r\n\r\n    onEdit(newContact);\r\n\r\n    form.reset();\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n      <input\r\n        defaultValue={contact.name}\r\n        className=\"input\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n      />\r\n      <input\r\n        defaultValue={contact.number}\r\n        className=\"input\"\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n        required\r\n      />\r\n\r\n      <button className=\"button\" type=\"submit\">\r\n        Edit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default EditForm;\r\n","import \"./ContactList.css\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport { BsStarFill } from \"react-icons/bs\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  useGetContactsQuery,\r\n  useDeleteContactMutation,\r\n  useEditContactMutation,\r\n  useUpdateFavoriteMutation,\r\n} from \"../../Redux/reducer\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport EditForm from \"../Forms/EditForm\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nconst ContactList = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [currentContact, setCurrentContact] = useState({});\r\n  const [page, setPage] = useState(1);\r\n\r\n  const filter = useSelector((state) => state.filter);\r\n  const {\r\n    data,\r\n    isLoading: isGetLoading,\r\n    refetch,\r\n  } = useGetContactsQuery({ page, filter });\r\n\r\n  const [deleteContact, { isLoading: isMutationLoading }] =\r\n    useDeleteContactMutation();\r\n  const [editContact] = useEditContactMutation();\r\n  const [updateFavorite] = useUpdateFavoriteMutation();\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, []);\r\n\r\n  const toggleModal = (contact) => {\r\n    setShowModal(!showModal);\r\n    setCurrentContact(contact);\r\n  };\r\n  const onEdit = (newContact) => {\r\n    editContact(newContact);\r\n    toggleModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showModal && (\r\n        <Modal toggleModal={toggleModal}>\r\n          <button type=\"button\" onClick={toggleModal} className=\"close-btn\">\r\n            Close\r\n          </button>\r\n          <EditForm contact={currentContact} onEdit={onEdit} />\r\n        </Modal>\r\n      )}\r\n\r\n      {isGetLoading && <Loader></Loader>}\r\n      {isMutationLoading && <Loader></Loader>}\r\n      {data?.contacts && !isMutationLoading && (\r\n        <ul className=\"contacts-list\">\r\n          {data.contacts.map((contact) => {\r\n            return (\r\n              <li className=\"contacts-item\" key={contact._id}>\r\n                {contact.name}:{\" \"}\r\n                <span className=\"contacts-number\">{contact.number}</span>\r\n                <button\r\n                  className=\"favotite-btn\"\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    updateFavorite({\r\n                      id: contact._id,\r\n                      favorite: !contact.favorite,\r\n                    });\r\n                  }}\r\n                >\r\n                  <BsStarFill\r\n                    className=\"favorite-icon\"\r\n                    style={{ fill: contact.favorite && \"rgb(255, 244, 84)\" }}\r\n                  />\r\n                </button>\r\n                <button\r\n                  className=\"button edit-btn\"\r\n                  type=\"button\"\r\n                  onClick={() => toggleModal(contact)}\r\n                >\r\n                  Edit\r\n                </button>\r\n                <button\r\n                  className=\"button\"\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    deleteContact(contact._id);\r\n                  }}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n      <Stack alignItems=\"center\">\r\n        <Pagination\r\n          count={data?.total > 5 ? Math.ceil(data.total / 5) : 1}\r\n          variant=\"outlined\"\r\n          onChange={(event, value) => {\r\n            setPage(value);\r\n          }}\r\n        />\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import './PhoneBook.css'\r\nimport ContactForm from '../../components/Forms/ContactForm'\r\nimport Filter from '../../components/Filter/Filter'\r\nimport ContactList from '../../components/ContactList/ContactList'\r\n\r\nconst PhoneBook = () => {\r\n  return (\r\n    <div className=\"phonebook\">\r\n      <h1 className=\"title\">Phonebook</h1>\r\n      <ContactForm />\r\n      <h2 className=\"title\">Contacts</h2>\r\n      <Filter />\r\n      <ContactList className=\"contacts-list\" />\r\n    </div>\r\n  )\r\n}\r\nexport default PhoneBook\r\n"],"names":["useAddContactMutation","addContact","isLoading","className","onSubmit","evt","preventDefault","form","currentTarget","newName","elements","name","value","newNumber","number","reset","placeholder","type","pattern","title","required","Loader","dispatch","useDispatch","onChange","target","changeFilter","contact","onEdit","newContact","id","_id","defaultValue","useState","showModal","setShowModal","currentContact","setCurrentContact","page","setPage","filter","useSelector","state","useGetContactsQuery","data","isGetLoading","refetch","useDeleteContactMutation","deleteContact","isMutationLoading","useEditContactMutation","editContact","useUpdateFavoriteMutation","updateFavorite","useEffect","toggleModal","Modal","onClick","contacts","map","favorite","style","fill","Stack","alignItems","Pagination","count","total","Math","ceil","variant","event"],"sourceRoot":""}